// Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using System.Collections.Generic;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class StateMachineTest
    {
        private StateMachine<int> stateMachine;
        
        [SetUp]
        public void Setup()
        {
            stateMachine = new StateMachine<int>();
        }

        [Test]
        public void Test_InitialStateMachine_CreatesEmptyDictionary()
        {
            var states = stateMachine.GetStates();

            Assert.AreEqual(0, states.Count, "State Dictionary should be initialized empty");
        }

        [Test]
        public void Test_StateMachine_AddNewState()
        {
            stateMachine.AddState(1, new State<int>(1));

            var states = stateMachine.GetStates();

            Assert.AreEqual(1, states.Count, "State Dictionary should have exactly one state after adding a state");
            Assert.IsTrue(states.ContainsKey(1), "State with key 1 should exist in State Dictionary");
        }

        [Test]
        public void Test_StateMachine_AddExistingState_ShouldUpdateState()
        {
            stateMachine.AddState(1, new State<int>(1));
            stateMachine.AddState(1, new State<int>(1));

            var states = stateMachine.GetStates();

            Assert.AreEqual(1, states.Count, "State Dictionary should have exactly one state after updating a state");
            Assert.IsTrue(states.ContainsKey(1), "State with key 1 should exist in State Dictionary");
        }
    }
}
