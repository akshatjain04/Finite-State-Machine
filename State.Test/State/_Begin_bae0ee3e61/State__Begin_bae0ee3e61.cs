// Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using Moq;
using System;
using FiniteStateMachine;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class State__Begin_bae0ee3e61
    {
        private Mock<State> _mockState;
        private FiniteStateChangeEventArgs _eventArgs;
        private string _previousStateKey;

        [SetUp]
        public void Setup()
        {
            _mockState = new Mock<State>();
            _eventArgs = new Mock<FiniteStateChangeEventArgs>().Object;
            _previousStateKey = "testPreviousState";
        }

        [Test]
        public void _Begin_CallsBeginMethodWithCorrectParams_SuccessCase()
        {
            // Arrange
            _mockState.Setup(x => x.Begin(_eventArgs, _previousStateKey));

            // Act
            _mockState.Object._Begin(_eventArgs, _previousStateKey);

            // Assert
            _mockState.Verify(x => x.Begin(_eventArgs, _previousStateKey), Times.Once);
        }

        [Test]
        public void _Begin_ThrowsExceptionWhenNullEventArgsProvided_FailureCase()
        {
            // Arrange
            FiniteStateChangeEventArgs nullEventArgs = null;

            // Act & Assert
            Assert.Throws<ArgumentNullException>(() => _mockState.Object._Begin(nullEventArgs, _previousStateKey));
        }
    }
}
