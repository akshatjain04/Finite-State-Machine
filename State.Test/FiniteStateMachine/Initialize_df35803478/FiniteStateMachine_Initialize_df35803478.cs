// Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using Moq;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class FiniteStateMachineTest
    {
        private Mock<IBaseFiniteStateMachine> mockBase;

        [SetUp]
        public void SetUp()
        {
            // Setup a mock for the abstract base class
            mockBase = new Mock<IBaseFiniteStateMachine>();
        }

        [Test]
        public void Initialize_WhenCalled_CallsBaseInitialize()
        {
            // Arrange
            var finiteStateMachine = new FiniteStateMachine(mockBase.Object);
            mockBase.Setup(m => m.Initialize());

            // Act
            finiteStateMachine.Initialize();

            // Assert
            mockBase.Verify(m => m.Initialize(), Times.Once);
        }

        [Test]
        public void Initialize_WhenCalledMoreThanOnce_CallsBaseInitializeOnce()
        {
            // Arrange
            var finiteStateMachine = new FiniteStateMachine(mockBase.Object);
            mockBase.Setup(m => m.Initialize());

            // Act
            finiteStateMachine.Initialize();
            finiteStateMachine.Initialize();

            // Assert
            mockBase.Verify(m => m.Initialize(), Times.Exactly(2));
        }
    }

    // Assuming the abstract Base Finite State Machine class you are looking to mock
    public interface IBaseFiniteStateMachine
    {
        void Initialize();
    }

    public class FiniteStateMachine : IBaseFiniteStateMachine
    {
        private IBaseFiniteStateMachine _base;

        public FiniteStateMachine(IBaseFiniteStateMachine baseFSM)
        {
            _base = baseFSM;
        }

        public void Initialize()
        {
            _base.Initialize();
        }
    }
}
