// Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using Moq;
using System;

namespace FiniteStateMachine.Test
{
    public class FiniteStateMachine_Update_97a3df38bc   
    {
        private FiniteStateMachine fsm;
        
        [SetUp]
        public void Setup()
        {
            fsm = new FiniteStateMachine();
        }

        [Test]
        public void Update_PositiveDeltaTime_CallsBaseUpdate()
        {
            // Arrange
            var baseFsm = new Mock<FiniteStateMachine>() {CallBase = true};
            float deltaTime = 1.0f;

            // Act
            baseFsm.Object.Update(deltaTime);

            // Assert
            baseFsm.Verify(b => b.Update(deltaTime), Times.Once);
        }

        [Test]
        public void Update_NegativeDeltaTime_ThrowsException()
        {
            // Arrange
            float deltaTime = -1.0f;

            // Assert
            Assert.Throws<ArgumentException>(() => fsm.Update(deltaTime));
        }

        [Test]
        public void Update_ZeroDeltaTime_DoesNotUpdateState()
        {
            // Arrange
            float deltaTime = 0.0f;

            // Act
            fsm.Update(deltaTime);

            // Assert
            Assert.Zero(fsm.State);  // assuming the 'State' is exposed for testability
        }

        [Test]
        public void Update_LargeDeltaTime_UpdatesAtMaxRate()
        {
            // Arrange
            float deltaTime = 10000.0f;  // an excessively large delta

            // Act
            fsm.Update(deltaTime);

            // Assert
            Assert.LessOrEqual(fsm.State, fsm.MaxRate);  // assuming the 'MaxRate' is exposed for testability
        }
    }
}
