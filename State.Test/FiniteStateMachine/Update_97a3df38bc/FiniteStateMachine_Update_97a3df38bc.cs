// Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

using System;
using NUnit.Framework;
using Moq;
using FiniteStateMachine;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class FiniteStateMachine_Update_97a3df38bc
    {
        private Mock<AnotherClass> _mockAnotherClass;

        [SetUp]
        public void Setup()
        {
            _mockAnotherClass = new Mock<AnotherClass>();
        }

        [Test]
        public void Update_InvokeWithPositiveValue_CallsBaseUpdateMethod()
        {
            // Arrange
            var finiteStateMachine = new FiniteStateMachine(_mockAnotherClass.Object);
            var deltaTime = 1.0f;

            // Act
            finiteStateMachine.Update(deltaTime);

            // Assert
            _mockAnotherClass.Verify(m => m.Update(deltaTime), Times.Once);
        }

        [Test]
        public void Update_InvokeWithZeroValue_CallsBaseUpdateMethod()
        {
            // Arrange
            var finiteStateMachine = new FiniteStateMachine(_mockAnotherClass.Object);
            var deltaTime = 0f;

            // Act
            finiteStateMachine.Update(deltaTime);

            // Assert
            _mockAnotherClass.Verify(m => m.Update(deltaTime), Times.Once);
        }

        [Test]
        public void Update_InvokeWithNegativeValue_ThrowsException()
        {
            // Arrange
            var finiteStateMachine = new FiniteStateMachine(_mockAnotherClass.Object);
            var deltaTime = -1.0f;

            // Act & Assert
            Assert.Throws<ArgumentException>(() => finiteStateMachine.Update(deltaTime));
        }
    }
}
