// Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

using System;
using FiniteStateMachine;
using NUnit.Framework;

namespace FiniteStateMachine.Tests
{
    [TestFixture]
    public class StateBaseTest
    {
        private FiniteStateMachine _fsm;
        private StateType _stateType;
        
        // Setting up data for testing
        [SetUp]
        public void SetUp()
        {
            _fsm = new FiniteStateMachine();
            _stateType = new StateType();
        }
        
        // Test StateBase with FiniteStateMachine and StateType object.
        [Test]
        public void TestStateBase_WithFsmAndStateKey_ReturnObjectOfTypeStateBase()
        {
            var stateBase = new StateBase(_fsm, _stateType);
            Assert.IsInstanceOf(typeof(StateBase), stateBase);
        } 
        
        // Test StateBase with null FiniteStateMachine, should throw ArgumentNullException.
        [Test]
        public void TestStateBase_WithNullFsm_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(()=> new StateBase(null, _stateType));
        } 

        // Test StateBase with null StateType, should throw ArgumentNullException.
        [Test]
        public void TestStateBase_WithNullStateKey_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(()=> new StateBase(_fsm, null));
        } 

        // Test StateBase with both null FiniteStateMachine and StateType,
        // should throw ArgumentNullException.
        [Test]
        public void TestStateBase_WithNullFsmAndStateKey_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(()=> new StateBase(null, null));
        }
    }
}
