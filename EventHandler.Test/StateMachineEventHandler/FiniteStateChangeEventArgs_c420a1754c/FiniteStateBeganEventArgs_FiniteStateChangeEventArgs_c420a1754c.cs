// Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using FiniteStateMachine;
using System;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class FiniteStateChangeEventArgsTest
    {
        private FiniteStateChangeEventArgs finiteStateChangeEventArgs;

        [SetUp]
        public void Setup()
        {
            // Assuming 'Idle' is a valid state in the 'StateType' enumeration
            finiteStateChangeEventArgs = new FiniteStateChangeEventArgs(StateType.Idle);
        }

        [Test]
        public void Constructor_SetStateType_SetsCorrectValue()
        {
            Assert.AreEqual(StateType.Idle, finiteStateChangeEventArgs.RequestedType);
        }

        [Test]
        public void Constructor_SetInvalidStateType_RaisesArgumentException()
        {
            // Assume that the 'StateType' enumeration does not contain a value of '999' and its use is thus invalid.
            StateType invalidStateType = (StateType)999;

            // Assert that an exception of type 'ArgumentException' is thrown
            var exception = Assert.Throws<ArgumentException>(() => new FiniteStateChangeEventArgs(invalidStateType));
            StringAssert.Contains("Invalid state type", exception.Message);
        }
    }
}
