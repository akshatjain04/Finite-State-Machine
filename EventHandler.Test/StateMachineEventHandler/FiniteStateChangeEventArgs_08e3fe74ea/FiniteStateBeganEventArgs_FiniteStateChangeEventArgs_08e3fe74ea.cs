//Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k
using NUnit.Framework;
using FiniteStateMachine;
using System;

namespace FiniteStateMachine.Test
{
  [TestFixture]
  public class FiniteStateChangeEventArgs_Tests
  {
    [Test]
    public void FiniteStateChangeEventArgs_Correct()
    {
       //Arrange
       StateType expectedStateType = StateType.SomeState;   //assuming StateType is enum and SomeState is one of its value 
       StateInfo expectedStateInfo = new StateInfoDerived();  //assuming a concrete class StateInfoDerived is derived from abstract class StateInfo

       //Act
       var result = new FiniteStateChangeEventArgs(expectedStateType, expectedStateInfo);

       //Assert
       Assert.AreEqual(expectedStateType, result.RequestedType);
       Assert.AreEqual(expectedStateInfo, result.StateInfo);
    }

    [Test]
    public void FiniteStateChangeEventArgs_NullStateType_ThrowsArgumentNullException()
    {
      //Arrange
      StateType stateType = null;
      var stateInfo = new StateInfoDerived();

      //Act and Assert
      Assert.Throws<ArgumentNullException>(() => new FiniteStateChangeEventArgs(stateType, stateInfo));
    }

    [Test]
    public void FiniteStateChangeEventArgs_NullStateInfo_ThrowsArgumentNullException()
    {
      //Arrange
      StateType stateType = StateType.SomeState;
      StateInfo stateInfo = null;

      //Act and Assert
      Assert.Throws<ArgumentNullException>(() => new FiniteStateChangeEventArgs(stateType, stateInfo));
    }
  }
}
