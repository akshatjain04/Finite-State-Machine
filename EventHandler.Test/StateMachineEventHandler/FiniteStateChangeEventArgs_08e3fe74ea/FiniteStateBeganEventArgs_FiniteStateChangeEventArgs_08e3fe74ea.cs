// Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using Moq;
using FiniteStateMachine;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class FiniteStateChangeEventArgsTests
    {
        [Test]
        public void Constructor_SetRequestedType_SetsRequestedType()
        {
            StateType stateType = StateType.Idle;
            var stateInfo = new StateInfo();

            var finiteStateChangeEventArgs = new FiniteStateChangeEventArgs(stateType, stateInfo);

            Assert.That(finiteStateChangeEventArgs.RequestedType, Is.EqualTo(stateType));
        }

        [Test]
        public void Constructor_SetStateInfo_SetsStateInfo()
        {
            var stateType = StateType.Idle;
            StateInfo stateInfo = new StateInfo();

            var finiteStateChangeEventArgs = new FiniteStateChangeEventArgs(stateType, stateInfo);

            Assert.That(finiteStateChangeEventArgs.StateInfo, Is.SameAs(stateInfo));
        }

        [Test]
        public void Constructor_NullStateInfo_ThrowsArgumentNullException()
        {
            var stateType = StateType.Idle;

            Assert.That(() => new FiniteStateChangeEventArgs(stateType, null), Throws.ArgumentNullException);
        }

        [Test]
        public void Constructor_InvalidStateType_ThrowsArgumentException()
        {
            var stateInfo = new StateInfo();

            Assert.That(() => new FiniteStateChangeEventArgs((StateType)999, stateInfo), Throws.ArgumentException);
        }
    }
}
